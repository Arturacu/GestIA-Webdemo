{"version":3,"sources":["game/components/sprite/index.js","game/components/wizard-actor/index.js","hooks/animation-timer/index.js","hooks/use-key-press/index.js","App.js","index.js"],"names":["Sprite","image","data","y","x","h","w","style","display","height","width","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","borderRadius","marginRight","marginLeft","boxShadow","WizardActor","animationFunction","timeout","fn","useState","animationStep","setAnimationStep","animationState","prev","console","log","useEffect","interval","setInterval","clearInterval","e","dir","key","replace","toLowerCase","window","addEventListener","removeEventListener","concat","App","position","color","href","target","className","audio","screenshotFormat","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAEe,SAASA,EAAT,GAAgC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,KAC5BC,EAAcD,EAAdC,EAAGC,EAAWF,EAAXE,EAAGC,EAAQH,EAARG,EAAGC,EAAKJ,EAALI,EAEhB,OACI,yBACIC,MAAO,CACHC,QAAS,eACTC,OAAO,GAAD,OAAKJ,EAAL,MACNK,MAAM,GAAD,OAAKJ,EAAL,MACLK,gBAAiB,QACjBC,gBAAiB,OAASX,EAAT,IACjBY,iBAAkB,YAClBC,mBAAmB,IAAD,OAAMV,EAAN,eAAcD,EAAd,MAClBY,aAAc,OACdC,YAAa,OACbC,WAAY,OACZC,UAAW,kCCZZ,SAASC,IAAe,ICJAC,EAAmBC,ECAtBC,EFIE,EACQC,mBAAS,GADjB,mBAC3BC,EAD2B,KACZC,EADY,OAEUF,mBAAS,YAFnB,mBAE3BG,EAF2B,UAsBlC,OC1BmCN,EDcR,WACvBK,GAAiB,SAAAE,GAAI,OAAKA,EAAO,GAJL,KAK5BC,QAAQC,IANJ,IAMQL,IChBsCH,EDYlC,ICXpBS,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBZ,MACDC,GACH,OAAO,kBAAMY,cAAcF,MAC5B,ICN6BT,EFqBpB,SAAAY,GACR,IAAMC,EAAMD,EAAEE,IAAIC,QAAQ,QAAS,IAAIC,cACvCV,QAAQC,IAAIM,IEtBhBL,qBAAU,WAEN,OADAS,OAAOC,iBAAiB,UAAWlB,GAC5B,kBAAMiB,OAAOE,oBAAoB,UAAWnB,MACpD,CAACA,IFuBA,kBAACtB,EAAD,CACIC,MApBa,kBAoBOyC,OAAOhB,GAC3BxB,KAAM,CAACE,EAnBP,IAmBUoB,EAAmBrB,EAAG,EAAGE,EApBjC,IAoBoCC,EAnBtC,O,4CG+BGqC,E,uKA9BP,MAAO,CACH,kBAAC,IAAD,CACIC,SAAS,QACTC,MAAM,QACNC,KAAK,gCACLC,OAAO,UAJX,yBAOA,yBAAKC,UAAU,kBACX,kBAAC,IAAD,CACIC,OAAO,EACPxC,OAlBM,IAmBNyC,iBAAiB,aACjBxC,MAnBK,IAoBLH,MAAO,CACHC,QAAS,eACTC,OAAO,GAAD,OArBT,IAqBS,MACNC,MAAM,GAAD,OArBT,IAqBS,MACLK,aAAc,MACdC,YAAa,OACbC,WAAY,OACZC,UAAW,kCAGnB,kBAACC,EAAD,Y,GA1BEgC,aCNlBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.c1976915.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\n\nexport default function Sprite({image, data}) {\n    const {y, x, h, w} = data\n\n    return (\n        <div\n            style={{\n                display: 'inline-block',\n                height: `${h}px`,\n                width: `${w}px`,\n                backgroundColor: 'white',\n                backgroundImage: `url(` + image + `)`,\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: `-${x}px -${y}px`,\n                borderRadius: '20px',\n                marginRight: '10px',\n                marginLeft: '10px',\n                boxShadow: 'inset -2px -1px 30px #808080',\n            }}\n        />\n    )\n}\n","import React from 'react'\nimport Sprite from '../sprite'\nimport useKeyPress from '../../../hooks/use-key-press'\nimport AnimationTimer from '../../../hooks/animation-timer'\nimport {useState} from 'react'\n\nexport default function WizardActor() {\n    const [animationStep, setAnimationStep] = useState(0)\n    const [animationState, setAnimationState] = useState('Idle.png')\n\n    const spriteFolder = 'sprites/wizard/'\n    const h = 190,\n        w = 231\n    const totalStepsIdleAnimation = 6\n    const idleTimeout = 250\n\n    const actorIdleAnimation = () => {\n        setAnimationStep(prev => (prev + 1) % totalStepsIdleAnimation)\n        console.log(animationStep * w)\n    }\n\n    AnimationTimer(actorIdleAnimation, idleTimeout)\n\n    useKeyPress(e => {\n        const dir = e.key.replace('Arrow', '').toLowerCase()\n        console.log(dir)\n    })\n\n    return (\n        <Sprite\n            image={spriteFolder.concat(animationState)}\n            data={{x: animationStep * w, y: 0, h, w}}\n        />\n    )\n}\n","import {useEffect} from 'react'\n\nexport default function AnimationTimer(animationFunction, timeout) {\n    useEffect(() => {\n        const interval = setInterval(() => {\n            animationFunction()\n        }, timeout)\n        return () => clearInterval(interval)\n    }, [])\n}\n","import {useEffect} from 'react'\n\nexport default function useKeyPress(fn) {\n    useEffect(() => {\n        window.addEventListener('keydown', fn)\n        return () => window.removeEventListener('keydown', fn)\n    }, [fn])\n}\n","import React, {Component} from 'react'\nimport WizardActor from './game/components/wizard-actor'\nimport GitHubForkRibbon from 'react-github-fork-ribbon'\nimport './App.css'\nimport Webcam from 'react-webcam'\n\nconst webcamImageHeight = 600\nconst webcamImageWidth = 600\nconst webcamHeight = 320\nconst webcamWidth = 400\n\nclass App extends Component {\n    render() {\n        return [\n            <GitHubForkRibbon\n                position=\"right\"\n                color=\"black\"\n                href=\"//github.com/burned301/GestIA\"\n                target=\"_blank\">\n                Fork GestIA on GitHub\n            </GitHubForkRibbon>,\n            <div className=\"zone-container\">\n                <Webcam\n                    audio={false}\n                    height={webcamImageHeight}\n                    screenshotFormat=\"image/jpeg\"\n                    width={webcamImageWidth}\n                    style={{\n                        display: 'inline-block',\n                        height: `${webcamHeight}px`,\n                        width: `${webcamWidth}px`,\n                        borderRadius: '5px',\n                        marginRight: '10px',\n                        marginLeft: '10px',\n                        boxShadow: 'inset -2px -1px 30px #808080',\n                    }}\n                />\n                <WizardActor />\n            </div>,\n        ]\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}